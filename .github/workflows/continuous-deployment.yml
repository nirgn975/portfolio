name: Continuous Deployment

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 7 1 * *" # Every first day on every month at 7:00 AM UTC (10:00 AM Israel time).

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write
  repository-projects: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v3

      - name: Install, build, and upload your site output
        uses: withastro/action@v0
        # with:
        # path: . # The root location of your Astro project inside the repository. (optional)
        # node-version: 16 # The specific version of Node that should be used to build your site. Defaults to 16. (optional)
        # package-manager: yarn # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  publish-release:
    needs: build
    runs-on: ubuntu-latest
    name: Publish a release to GitHub
    steps:
      - uses: actions/checkout@v3

      - name: Create Release ðŸš€
        uses: ridedott/release-me-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release-branches: '["main"]'

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   name: Deploy to GitHub pages
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy to Netlify
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v3

      - name: Publish
        uses: netlify/actions/build@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_CMD: npm run build
          NETLIFY_DIR: dist

  build-index:
    needs: deploy
    runs-on: ubuntu-latest
    name: Build search index and push it to Algolia
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Create index file
        run: node index-posts.js

      - name: Update index.json To Algolia
        run: npx atomic-algolia
        env:
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
          ALGOLIA_INDEX_NAME: index.json
          ALGOLIA_INDEX_FILE: ./dist/index.json
