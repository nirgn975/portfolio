---
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths({ paginate }) {
  // Use Astro.glob() to fetch all posts, and then sort them by date.
  const posts = (await Astro.glob("./**/*.{md,mdx}"))
    .filter((post) => import.meta.env.MODE == "development" || !post.frontmatter.draft)
    .sort((a, b) => new Date(b.frontmatter.date).valueOf() - new Date(a.frontmatter.date).valueOf());

  // Generate pages from our array of astronauts, with 2 to a page
  return paginate(posts, { pageSize: 5 });
}

const { page } = Astro.props;
---

<Layout title="Datalead AI | Homepage">
  <section class="flex flex-col items-center">
    <img src="/blog-hero.webp" alt="Blog Logo" class="w-2/3 mt-8" />

    <div class="text-center my-4">
      <p id="typeit"></p>
      <p class="text-zinc-400 dark:text-zinc-600 mt-2">All of the posts are written for educational purposes only.</p>
    </div>

    <div class="flex flex-col items-center divide-y divide-zinc-300 dark:divide-zinc-700">
      {
        page?.data.map((post: any) => (
          <article class="w-2/3 py-6">
            <a href={post.url}>
              <img src={post.frontmatter.featuredImage} class="object-cover my-2 w-full h-60" />
            </a>

            <h2 class="my-1 text-lg font-bold">
              <a href={post.url} class="hover:text-zinc-800 dark:hover:text-zinc-300">
                {post.frontmatter.title}
              </a>
            </h2>

            <div class="flex">
              <span>
                <a href={post.frontmatter.authorLink} class="hover:text-zinc-800 dark:hover:text-zinc-300">
                  <i class="fa-solid fa-user" />
                  {post.frontmatter.author}
                </a>
              </span>
              <span class="ml-1 text-sm text-zinc-400 dark:text-zinc-600 flex self-end">
                published on
                <time datetime={post.frontmatter.date} class="ml-1">
                  {new Date(post.frontmatter.date).toLocaleDateString("en-us", {
                    year: "numeric",
                    month: "short",
                    day: "numeric",
                  })}
                </time>
              </span>
              <span class="ml-1 text-sm text-zinc-400 dark:text-zinc-600 flex self-end">
                included in
                <a href={`/categories/${post.frontmatter.category}`} class="text-zinc-700 dark:text-zinc-400 ml-1 hover:text-zinc-800 dark:hover:text-zinc-300">
                  <i class="fa-regular fa-folder" />
                  {post.frontmatter.category}
                </a>
              </span>
            </div>

            <p class="line-clamp-3 text-zinc-400 dark:text-zinc-600 my-1">
              {post
                .compiledContent()
                .replace(/<[^>]*>?/gm, "")
                .substring(0, 400)}
            </p>

            <div class="flex justify-between items-center">
              <a href={post.url} class="text-sky-500 hover:text-sky-400">
                Read More
              </a>
              <div class="max-w-md">
                <i class="fa-solid fa-tags inline-block" />
                {post.frontmatter.tags.map((tag: string) => (
                  <a href={`/tags/${tag}`} class="ml-1 text-sm inline-block hover:text-zinc-800 dark:hover:text-zinc-300">
                    {tag}
                  </a>
                ))}
              </div>
            </div>
          </article>
        ))
      }
    </div>

    <ul class="flex">
      {
        Array(page.lastPage)
          .fill(0)
          .map((_, index) => (
            <a href={index + 1 == 1 ? "/blog" : `/blog/${index + 1}`} class="mx-3 hover:text-zinc-800 dark:hover:text-zinc-300 font-medium">
              <li class={page.currentPage == index + 1 ? "px-2 border-b-2 border-zinc-800 dark:border-zinc-300 text-zinc-800 dark:text-zinc-300" : "px-2"}>
                {index + 1}
              </li>
            </a>
          ))
      }
    </ul>
  </section>

  <script is:inline src="https://unpkg.com/typeit@8.7.0/dist/index.umd.js"></script>
  <script is:inline>
    new TypeIt("#typeit", {
      strings: "Welcome to Stories of a Lifelong Student, a blog for geeks (:",
      lifeLike: true,
      cursor: true,
      cursorChar: "<span class='text-zinc-400 ml-1'>|</span>",
      waitUntilVisible: true,
    }).go();
  </script>
</Layout>
