---
import Layout from "./Layout.astro";

export interface Props {
  content: {
    title: string;
    pubDate: string;
    author: string;
    authorLink: string;
    category: string;
    featuredImage: string;
  };
}

const {
  content: { title, pubDate, author, authorLink, category, featuredImage },
  headings,
} = Astro.props;

const WORDS_PER_MINUTE = 200;
const content = Astro.props.rawContent();
const numberOfWords = content.split(/\s/g).length;
const readTime = Math.ceil(numberOfWords / WORDS_PER_MINUTE);
---

<Layout title={`Blog | ${title}`}>
  <article>
    <h2 class="mt-4 mb-2 text-3xl font-bold">{title}</h2>

    <div class="flex mb-1">
      <span>
        <a href={authorLink} target="_blank" class="hover:text-zinc-800 dark:hover:text-zinc-300">
          <i class="fa-solid fa-user"></i>
          {author}
        </a>
      </span>

      <span class="ml-1 text-sm text-zinc-400 dark:text-zinc-600 flex self-end">
        included in
        <a href={`/categories/${category}`} class="text-zinc-700 dark:text-zinc-400 ml-1 hover:text-zinc-800 dark:hover:text-zinc-300">
          <i class="fa-regular fa-folder"></i>
          {category}
        </a>
      </span>
    </div>

    <div class="flex">
      <span class="text-sm text-zinc-400 dark:text-zinc-600 flex self-end">
        <i class="fa-regular fa-calendar-days"></i>
        <time datetime={pubDate} class="ml-1">
          {
            new Date(pubDate).toLocaleDateString("en-us", {
              year: "numeric",
              month: "short",
              day: "numeric",
            })
          }
        </time>
      </span>

      <span class="ml-3 text-sm text-zinc-400 dark:text-zinc-600">
        <i class="fa-regular fa-pencil"></i>
        {numberOfWords} words
      </span>

      <span class="ml-3 text-sm text-zinc-400 dark:text-zinc-600">
        <i class="fa-regular fa-clock"></i>
        {readTime} minutes
      </span>
    </div>

    <div class="flex">
      <div class="w-3/4 content">
        <img src={featuredImage} class="object-cover my-2 w-full max-h-96" />
        <div class="content mb-8">
          <slot />
        </div>

        <!-- <script
          is:inline
          src="https://giscus.app/client.js"
          data-repo="nirgn975/portfolio"
          data-repo-id="MDEwOlJlcG9zaXRvcnk2MDg0NTI1OA=="
          data-category="Comments"
          data-category-id="DIC_kwDOA6Bsys4CSNJU"
          data-mapping="pathname"
          data-strict="1"
          data-reactions-enabled="1"
          data-emit-metadata="0"
          data-input-position="bottom"
          data-theme="transparent_dark"
          data-lang="en"
          data-loading="lazy"
          crossorigin="anonymous"
          async
        ></script> -->
      </div>

      <div class="w-1/4 sticky top-0 h-fit mt-2 ml-4 pl-4 border-l-4 border-zinc-300 dark:border-zinc-700">
        <p class="text-lg font-semibold mb-2">CONTENTS</p>
        {
          headings.map((header: Record<"depth" | "slug" | "text", string>) => (
            <a href={`#${header.slug}`} class="block my-1 hover:text-sky-500" style={`padding-left: ${(Number(header.depth) - 2) * 1.25}rem`}>
              {header.text}
            </a>
          ))
        }
      </div>
    </div>
  </article>
</Layout>

<style is:global>
  .content img {
    @apply m-2 mx-auto;
  }

  .content p {
    @apply my-2;
  }

  .content h2 {
    @apply text-2xl mt-5 mb-3 font-bold;
  }

  .content h3 {
    @apply text-xl mt-3 mb-2 font-bold;
  }

  .content :not(pre) > code {
    @apply bg-[#f5f5f5] text-[#e74c3c] px-2;
  }

  .dark .content :not(pre) > code {
    @apply bg-[#272c34] text-[#e5bf78] px-2;
  }

  .content a {
    @apply text-[#0ea5e9];
  }

  .content a:hover {
    @apply text-[#38bdf8];
  }

  code {
    counter-reset: line;
    /* counter-reset: line 100; */
  }

  code[data-line-numbers] > .line::before {
    content: counter(line);
    counter-increment: line;
    @apply inline-block text-right w-4 mr-5 text-zinc-600;
  }

  /* code[data-line-numbers] > .line:first-of-type::before {
    counter-set: line 100;
  } */

  code[data-line-numbers][data-language="bash"] > .line::before {
    content: "$";
  }

  div[data-rehype-pretty-code-title] {
    @apply h-10 rounded-t-md pl-4 text-zinc-800 dark:text-zinc-300 flex items-center font-semibold bg-[#c8c8ff0d];
  }

  div[data-rehype-pretty-code-title]::before {
    content: url("/terminal-dots.svg");
    @apply mr-8 pt-2;
  }

  div[data-rehype-pretty-code-fragment] pre {
    @apply relative rounded-b-md m-0 bg-[#c8c8ff0d];
  }

  div[data-rehype-pretty-code-fragment] .line {
    @apply pl-2;
  }

  div[data-rehype-pretty-code-fragment] code {
    @apply flex flex-col overflow-x-scroll pb-2;
  }

  div[data-rehype-pretty-code-fragment] .highlighted {
    @apply bg-[#c8c8ff1a] border-l-[#60a5fa];
  }

  pre[data-language]:after {
    /* @apply absolute right-3 bottom-2 text-zinc-600; */
    @apply absolute right-3 -top-8 text-zinc-600;
    content: attr(data-language);
  }
</style>
